{"componentChunkName":"component---antv-gatsby-theme-antv-site-templates-tutorial-tsx","path":"/en/tutorials/basic","result":{"data":{"site":{"siteMetadata":{"title":"Choerodon UI","githubUrl":"https://github.com/open-hand/choerodon-ui","tutorials":[]},"pathPrefix":"/c7n-ui"},"markdownRemark":{"html":"<p>In the previous chapter, DataSet is an abstract data source warehouse, similar to the concept of a table in a back-end database.</p>\n<p>DataSet has a special abstract API related system. Using it does not require a major transformation of the existing back-end system, only the corresponding coding for the back-end interface.</p>\n<p>Combining interface data, this chapter takes you to create a simple DataSet object.</p>\n<h1 id=\"interface-data\" style=\"position:relative;\"><a href=\"#interface-data\" aria-label=\"interface data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interface data</h1>\n<p>The backend has a data structure similar to this, which returns the following data:</p>\n<img src=\"https://file.open.hand-china.com/hsop-image-host/team/3/6d0173d3560a4771a6f11850a40789fa@y4.png\" alt=\"后端数据.png\" width=\"600\">\n<p>Is hosted on such an interface address</p>\n<blockquote>\n<p><a href=\"https://www.fastmock.site/mock/423302b318dd24f1712751d9bfc1cbbc/mock/guide/user\" target=\"_self\" rel=\"nofollow\">mock interface address</a></p>\n</blockquote>\n<img src=\"https://file.open.hand-china.com/hsop-image-host/team/3/f6b74bf5b2a54367bd968675b19e8c8c@y5.png\" alt=\"mock-address.png\"  width=\"600\">\n<h1 id=\"dataset-construction\" style=\"position:relative;\"><a href=\"#dataset-construction\" aria-label=\"dataset construction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DataSet Construction</h1>\n<p>To analyze the interface information, if we need to build a DataSet for data management and use Pro components, we can write:</p>\n<div class=\"gatsby-highlight\" data-language=\"plain\"><pre class=\"language-plain\"><code class=\"language-plain\">import { DataSet } from &#39;choerodon-ui/pro&#39;;\nconst userDS = new DataSet({\n    // 指定 DataSet 初始化后自动查询\n    autoQuery: true,\n    // 请求分页大小\n    pageSize: 8,\n    // 主键字段名，一般用作级联行表的查询字段\n    primaryKey: &#39;id&#39;,\n    // 对应后端接口，自动生成约定的 submitUrl, queryUrl...\n    name: &#39;user&#39;,\n    // 数据对象名，默认值 &#39;rows&#39;\n    dataKey: &#39;content&#39;,\n    // DataSet 中包含的字段，对应上述后端数据中每条记录中的字段\n    fields: [\n        { name: &#39;id&#39;, type: &#39;number&#39; },\n        { name: &#39;name&#39;, type: &#39;string&#39;, label: &#39;姓名&#39; },\n        { name: &#39;code&#39;, type: &#39;string&#39;, label: &#39;编码&#39; },\n        { name: &#39;sex&#39;, type: &#39;string&#39;, label: &#39;性别&#39;, lookupUrl: &#39;https://www.fastmock.site/mock/423302b318dd24f1712751d9bfc1cbbc/mock/EMPLOYEE_GENDER&#39; },\n        { name: &#39;active&#39;, label: &#39;状态&#39;, type: &#39;boolean&#39; },\n    ],\n    // 接口自定义配置\n    transport: {\n        // 查询请求的 axios 配置或 url 字符串\n        read: {\n            url: &#39;https://www.fastmock.site/mock/423302b318dd24f1712751d9bfc1cbbc/mock/guide/user&#39;,\n            method: &#39;GET&#39;,\n        }\n    },\n    // DS 事件回调\n    events: {\n        load: ({ dataSet }) =&gt; {\n            console.log(&#39;加载完成&#39;, dataSet)\n        }\n    }\n})</code></pre></div>\n<p>In this way, we have created a basic DataSet object. The key attributes in its configuration are explained below.</p>\n<blockquote>\n<p>For more configuration API documents, refer to <a href=\"/c7n-ui/zh/procmp/dataset/dataset\">DataSet</a>.</p>\n</blockquote>\n<h2 id=\"fields\" style=\"position:relative;\"><a href=\"#fields\" aria-label=\"fields permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fields</h2>\n<p><a href=\"/c7n-ui/zh/procmp/dataset/dataset#field-props\">fields</a>, as the name implies, is similar to the field properties in the back-end SQL data table. The responsibility here is to collect the data returned from the backend into the DataSet and turn it into data that the DataSet can monitor.</p>\n<p>fields will be an array, because an interface field can always correspond to multiple. The internal name is responsible for indicating the field name (key in the object) that needs to be collected and converted, and the type is responsible for converting the collected information into the corresponding type.</p>\n<p>The DataSet processed in this way (after new is instantiated) will convert all the back-end data into the field objects stored in the DataSet. At the same time, the observer mode is used to synchronize the view and the data.</p>\n<h2 id=\"transport\" style=\"position:relative;\"><a href=\"#transport\" aria-label=\"transport permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>transport</h2>\n<p><a href=\"/c7n-ui/zh/procmp/dataset/dataset#transport\">transport</a> This attribute is used to process custom interfaces. DataSet has prepared CRUD methods in advance for RESTful scenarios. Here we use the read method, that is, read method, query data interface.</p>\n<p>The method inside each transport receives an AxiosConfig. Here we use url and method. In the next chapters we will introduce <a href=\"/c7n-ui/zh/procmp/dataset/dataset#transport\">transport</a> in detail.</p>\n<h2 id=\"events\" style=\"position:relative;\"><a href=\"#events\" aria-label=\"events permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>events</h2>\n<p><a href=\"/c7n-ui/zh/procmp/dataset/dataset#dataset-events\">events</a> is a callback function that the DataSet will call after completing some operations. For example, the update method will be called after the value of the record object is updated. Here, the event we observe is load -Event after the data is loaded. Then it will be triggered after the read method is executed and the data is returned. Here we use console.log to print and load the completion. The actual development scenario can process the returned data in advance in this event and manipulate the DataSet object.</p>\n<p>In the next chapter, we will use the DataSet created in this chapter to experience Pro development-the simplest Table implementation.</p>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the previous chapter, DataSet is an abstract data source warehouse, similar to the concept of a table in a back-end database."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"DataSet has a special abstract API related system. Using it does not require a major transformation of the existing back-end system, only the corresponding coding for the back-end interface."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Combining interface data, this chapter takes you to create a simple DataSet object."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"interface-data","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#interface-data","ariaLabel":"interface data permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Interface data"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The backend has a data structure similar to this, which returns the following data:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"img","properties":{"src":"https://file.open.hand-china.com/hsop-image-host/team/3/6d0173d3560a4771a6f11850a40789fa@y4.png","alt":"后端数据.png","width":600},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Is hosted on such an interface address"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.fastmock.site/mock/423302b318dd24f1712751d9bfc1cbbc/mock/guide/user","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"mock interface address"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"img","properties":{"src":"https://file.open.hand-china.com/hsop-image-host/team/3/f6b74bf5b2a54367bd968675b19e8c8c@y5.png","alt":"mock-address.png","width":600},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"dataset-construction","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#dataset-construction","ariaLabel":"dataset construction permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"DataSet Construction"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To analyze the interface information, if we need to build a DataSet for data management and use Pro components, we can write:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"plain"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-plain"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-plain"]},"children":[{"type":"text","value":"import { DataSet } from 'choerodon-ui/pro';\nconst userDS = new DataSet({\n    // 指定 DataSet 初始化后自动查询\n    autoQuery: true,\n    // 请求分页大小\n    pageSize: 8,\n    // 主键字段名，一般用作级联行表的查询字段\n    primaryKey: 'id',\n    // 对应后端接口，自动生成约定的 submitUrl, queryUrl...\n    name: 'user',\n    // 数据对象名，默认值 'rows'\n    dataKey: 'content',\n    // DataSet 中包含的字段，对应上述后端数据中每条记录中的字段\n    fields: [\n        { name: 'id', type: 'number' },\n        { name: 'name', type: 'string', label: '姓名' },\n        { name: 'code', type: 'string', label: '编码' },\n        { name: 'sex', type: 'string', label: '性别', lookupUrl: 'https://www.fastmock.site/mock/423302b318dd24f1712751d9bfc1cbbc/mock/EMPLOYEE_GENDER' },\n        { name: 'active', label: '状态', type: 'boolean' },\n    ],\n    // 接口自定义配置\n    transport: {\n        // 查询请求的 axios 配置或 url 字符串\n        read: {\n            url: 'https://www.fastmock.site/mock/423302b318dd24f1712751d9bfc1cbbc/mock/guide/user',\n            method: 'GET',\n        }\n    },\n    // DS 事件回调\n    events: {\n        load: ({ dataSet }) => {\n            console.log('加载完成', dataSet)\n        }\n    }\n})"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this way, we have created a basic DataSet object. The key attributes in its configuration are explained below."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For more configuration API documents, refer to "},{"type":"element","tagName":"a","properties":{"href":"/c7n-ui/zh/procmp/dataset/dataset"},"children":[{"type":"text","value":"DataSet"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"fields","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fields","ariaLabel":"fields permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"fields"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"/c7n-ui/zh/procmp/dataset/dataset#field-props"},"children":[{"type":"text","value":"fields"}]},{"type":"text","value":", as the name implies, is similar to the field properties in the back-end SQL data table. The responsibility here is to collect the data returned from the backend into the DataSet and turn it into data that the DataSet can monitor."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"fields will be an array, because an interface field can always correspond to multiple. The internal name is responsible for indicating the field name (key in the object) that needs to be collected and converted, and the type is responsible for converting the collected information into the corresponding type."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The DataSet processed in this way (after new is instantiated) will convert all the back-end data into the field objects stored in the DataSet. At the same time, the observer mode is used to synchronize the view and the data."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"transport","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#transport","ariaLabel":"transport permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"transport"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"/c7n-ui/zh/procmp/dataset/dataset#transport"},"children":[{"type":"text","value":"transport"}]},{"type":"text","value":" This attribute is used to process custom interfaces. DataSet has prepared CRUD methods in advance for RESTful scenarios. Here we use the read method, that is, read method, query data interface."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The method inside each transport receives an AxiosConfig. Here we use url and method. In the next chapters we will introduce "},{"type":"element","tagName":"a","properties":{"href":"/c7n-ui/zh/procmp/dataset/dataset#transport"},"children":[{"type":"text","value":"transport"}]},{"type":"text","value":" in detail."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"events","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#events","ariaLabel":"events permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"events"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"/c7n-ui/zh/procmp/dataset/dataset#dataset-events"},"children":[{"type":"text","value":"events"}]},{"type":"text","value":" is a callback function that the DataSet will call after completing some operations. For example, the update method will be called after the value of the record object is updated. Here, the event we observe is load -Event after the data is loaded. Then it will be triggered after the read method is executed and the data is returned. Here we use console.log to print and load the completion. The actual development scenario can process the returned data in advance in this event and manipulate the DataSet object."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the next chapter, we will use the DataSet created in this chapter to experience Pro development-the simplest Table implementation."}]}],"data":{"quirksMode":false}},"tableOfContents":"<ul>\n<li><a href=\"/c7n-ui/en/tutorials/basic/#interface-data\">Interface data</a></li>\n<li>\n<p><a href=\"/c7n-ui/en/tutorials/basic/#dataset-construction\">DataSet Construction</a></p>\n<ul>\n<li><a href=\"/c7n-ui/en/tutorials/basic/#fields\">fields</a></li>\n<li><a href=\"/c7n-ui/en/tutorials/basic/#transport\">transport</a></li>\n<li><a href=\"/c7n-ui/en/tutorials/basic/#events\">events</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/en/tutorials/basic","readingTime":{"text":"3 min read","time":171900}},"frontmatter":{"title":"Getting started with DS"},"parent":{"__typename":"File","relativePath":"basic.en.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/tutorials/introduction"},"frontmatter":{"title":"Choerodon UI getting started guide","order":0}}},{"node":{"fields":{"slug":"/zh/tutorials/introduction"},"frontmatter":{"title":"Choerodon UI 入门指南","order":0}}},{"node":{"fields":{"slug":"/zh/tutorials/demo-build"},"frontmatter":{"title":"Demo 界面搭建","order":1}}},{"node":{"fields":{"slug":"/en/tutorials/demo-build"},"frontmatter":{"title":"Demo interface construction","order":1}}},{"node":{"fields":{"slug":"/en/tutorials/dataSet-guide"},"frontmatter":{"title":"What is DataSet","order":2}}},{"node":{"fields":{"slug":"/zh/tutorials/dataSet-guide"},"frontmatter":{"title":"DataSet 是什么","order":2}}},{"node":{"fields":{"slug":"/zh/tutorials/basic"},"frontmatter":{"title":"DataSet 入门","order":3}}},{"node":{"fields":{"slug":"/en/tutorials/basic"},"frontmatter":{"title":"Getting started with DS","order":3}}},{"node":{"fields":{"slug":"/zh/tutorials/table"},"frontmatter":{"title":"开发体验 —— 最简 Table 实现","order":4}}},{"node":{"fields":{"slug":"/en/tutorials/table"},"frontmatter":{"title":"Development Experience-Simplest Table Implementation","order":4}}},{"node":{"fields":{"slug":"/en/tutorials/dataSet-more"},"frontmatter":{"title":"Detailed DataSet Object","order":5}}},{"node":{"fields":{"slug":"/zh/tutorials/dataSet-more"},"frontmatter":{"title":"DataSet 对象详解","order":5}}},{"node":{"fields":{"slug":"/en/tutorials/table-advance"},"frontmatter":{"title":"Table Advanced","order":6}}},{"node":{"fields":{"slug":"/zh/tutorials/table-advance"},"frontmatter":{"title":"Table 进阶","order":6}}},{"node":{"fields":{"slug":"/zh/tutorials/form"},"frontmatter":{"title":"Form","order":7}}},{"node":{"fields":{"slug":"/en/tutorials/form"},"frontmatter":{"title":"Form","order":7}}},{"node":{"fields":{"slug":"/en/tutorials/tree"},"frontmatter":{"title":"Tree","order":8}}},{"node":{"fields":{"slug":"/zh/tutorials/tree"},"frontmatter":{"title":"Tree","order":8}}},{"node":{"fields":{"slug":"/en/tutorials/select"},"frontmatter":{"title":"Select","order":9}}},{"node":{"fields":{"slug":"/zh/tutorials/select"},"frontmatter":{"title":"Select","order":9}}},{"node":{"fields":{"slug":"/zh/tutorials/lov"},"frontmatter":{"title":"Lov","order":10}}},{"node":{"fields":{"slug":"/en/tutorials/lov"},"frontmatter":{"title":"Lov","order":10}}},{"node":{"fields":{"slug":"/en/tutorials/codearea-theme"},"frontmatter":{"title":"CodeArea 主题资源引用","order":11}}},{"node":{"fields":{"slug":"/zh/tutorials/configure"},"frontmatter":{"title":"全局配置","order":11}}},{"node":{"fields":{"slug":"/zh/tutorials/codearea-theme"},"frontmatter":{"title":"CodeArea 主题资源引用","order":11}}},{"node":{"fields":{"slug":"/en/tutorials/configure"},"frontmatter":{"title":"全局配置","order":11}}},{"node":{"fields":{"slug":"/en/tutorials/namesake-property"},"frontmatter":{"title":"同名属性","order":13}}},{"node":{"fields":{"slug":"/zh/tutorials/namesake-property"},"frontmatter":{"title":"同名属性","order":13}}}]}},"pageContext":{}},"staticQueryHashes":["3000541721","3000541721","653731124"]}