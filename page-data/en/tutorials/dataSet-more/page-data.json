{"componentChunkName":"component---antv-gatsby-theme-antv-site-templates-tutorial-tsx","path":"/en/tutorials/dataSet-more","result":{"data":{"site":{"siteMetadata":{"title":"Choerodon UI","githubUrl":"https://github.com/open-hand/choerodon-ui","tutorials":[]},"pathPrefix":"/c7n-ui"},"markdownRemark":{"html":"<p>The previous chapters introduced the concept of DS objects. This chapter will introduce the following properties and explain in detail its extended objects:</p>\n<ol>\n<li>field</li>\n<li>record</li>\n<li>transport</li>\n<li>dataToJSON</li>\n</ol>\n<h1 id=\"dataset-methods\" style=\"position:relative;\"><a href=\"#dataset-methods\" aria-label=\"dataset methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DataSet methods</h1>\n<p>The instantiated object of the DataSet has many methods-DataSet Methods, which are used to manipulate the associated objects in the DataSet and implement various operations such as requests, loading, and data conversion.</p>\n<p>DataSet method operation objects can be divided into three categories:</p>\n<ol>\n<li>\n<p>The DataSet itself</p>\n<ol>\n<li>Interact with the backend-query, submit, setQueryParameter, loadData, page...</li>\n<li>Status, data acquisition-ready, toData, toJSONData...</li>\n<li>Data positioning-locate, page, first, prePage...</li>\n</ol>\n</li>\n<li>\n<p>Field Object</p>\n<ol>\n<li>getField(fieldName)-Get field object</li>\n<li>addField(fieldName, fieldProps)-update, add field</li>\n</ol>\n</li>\n<li>\n<p>The records array</p>\n<ol>\n<li>Addition and deletion of record array-create, delete, remove, select...</li>\n<li>Iterative method of record array-push, shift, map, forEach...</li>\n</ol>\n</li>\n</ol>\n<p>The corresponding associated object also has its own method attributes and so on.</p>\n<h1 id=\"fields\" style=\"position:relative;\"><a href=\"#fields\" aria-label=\"fields permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fields</h1>\n<blockquote>\n<p>Official website document description: Field property array, see <a href=\"/c7n-ui/zh/procmp/dataset/dataset#field-props\">Field Props</a> for details.</p>\n</blockquote>\n<p>Field attribute value, corresponding configuration to generate field object and field object method after DS is instantiated.</p>\n<p>For example, in the official website API documentation, the field object has its own properties (props), values ​​(values), and methods (method). So how can these three types of API be used when? And what is the effect?</p>\n<h2 id=\"field-props\" style=\"position:relative;\"><a href=\"#field-props\" aria-label=\"field props permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>field props</h2>\n<p>Configure the field information attribute in the DataSet configuration.</p>\n<blockquote>\n<p>Note: Some field attributes have higher priority than component attributes.\nFor example, the required attribute, the field configuration must be entered, and the component configuration required={false}. At this time, if there is a conflict, the configuration on the field will be applied.\nThe reason is that DS can associate multiple components and perform operations such as submitting and interacting with the backend. The control range is wide and the status interacts with the backend. Therefore, DS has a higher priority when attributes conflict.\nThe following are some of the most commonly used attributes in development (detailed descriptions will be made about the Lov/Lookup class):</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Attribute name</th>\n<th align=\"left\">Description</th>\n<th align=\"left\">Type</th>\n<th align=\"left\">Default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">name</td>\n<td align=\"left\">Field name</td>\n<td align=\"left\">string</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">type</td>\n<td align=\"left\">Field type, optional value: boolean | number | string | date | dateTime | time | week | month | year | email | url | intl | object</td>\n<td align=\"left\">string</td>\n<td align=\"left\">string</td>\n</tr>\n<tr>\n<td align=\"left\">required</td>\n<td align=\"left\">Is it required</td>\n<td align=\"left\">boolean</td>\n<td align=\"left\">false</td>\n</tr>\n<tr>\n<td align=\"left\">computedProps</td>\n<td align=\"left\">Dynamic property object. The object is the key-value pair of the field attribute and the hook that returns the field value.</td>\n<td align=\"left\">{ fieldProp: ({ dataSet, record, name }) => value }</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">ignore</td>\n<td align=\"left\">Ignore submission, optional value: always- always ignore clean- ignore when the value has not changed never- never ignore</td>\n<td align=\"left\">string</td>\n<td align=\"left\">never</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"name\" style=\"position:relative;\"><a href=\"#name\" aria-label=\"name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>name</h3>\n<blockquote>\n<p>Corresponding to the back-end field name to be processed</p>\n</blockquote>\n<h3 id=\"type\" style=\"position:relative;\"><a href=\"#type\" aria-label=\"type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>type</h3>\n<blockquote>\n<p>Field value type. Used to process value types and render corresponding component types in the component library according to type associations.</p>\n</blockquote>\n<p>For example, in the previous chapter Table active status field, type:'boolean', the rendering component type in the table is Checkbox.</p>\n<p>Other corresponding relationships are as follows:</p>\n<ul>\n<li>number-NumberField</li>\n<li>string-TextField | Select</li>\n<li>date-DatePicker</li>\n<li>dateTime-DateTimePicker</li>\n<li>time-TimePicker</li>\n<li>week-WeekPicker</li>\n<li>month-MonthPicker</li>\n<li>year-YearPicker</li>\n<li>email-EmailField</li>\n<li>url-UrlField</li>\n<li>intl-IntlField</li>\n<li>object-Select | Lov</li>\n</ul>\n<p>It can be found that there are multiple situations for the above type corresponding to the component type, and more types of component support may be required in actual applications, so how to deal with this situation in the component library? Is it supported?</p>\n<p>The answer is yes of course. How to support the subsequent chapters combined with case practice.</p>\n<h3 id=\"required\" style=\"position:relative;\"><a href=\"#required\" aria-label=\"required permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>required</h3>\n<blockquote>\n<p>Whether you must lose.</p>\n</blockquote>\n<p>Whether the configuration field must be entered, if it is true (must be entered), then when using DS to submit or call the relevant verification method, it will verify whether the value exists.</p>\n<p>There are also attributes of the same type: readOnly | disabled ...</p>\n<p>Corresponding to more custom verification requirements, you can use the attribute validator-validator. When the return value is false or a string containing error information, the verification fails.</p>\n<h3 id=\"dynamicprops\" style=\"position:relative;\"><a href=\"#dynamicprops\" aria-label=\"dynamicprops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dynamicProps</h3>\n<blockquote>\n<p>Dynamic attribute objects. The object is the key-value pair of the field attribute and the hook that returns the field value.</p>\n</blockquote>\n<p>Surface meaning, dynamic configuration properties, type: {fieldProp: ({ dataSet, record, name }) => value}</p>\n<p>For example, the above mandatory attribute dynamic configuration:</p>\n<div class=\"gatsby-highlight\" data-language=\"plain\"><pre class=\"language-plain\"><code class=\"language-plain\">// When the field meets the xxx condition, the field must be entered\ndynamicProps: { \n  required: ({ dataSet, record, name }) =&gt; {\n    if(xxx) {\n      return true;\n    }\n  },\n}</code></pre></div>\n<blockquote>\n<p>Note: Try to use dynamicProps only when necessary. Dynamic properties need to be logically judged in the component library to ensure that the properties are dynamically processed correctly. Meaningless dynamic properties will cause performance problems.</p>\n</blockquote>\n<h3 id=\"ignore\" style=\"position:relative;\"><a href=\"#ignore\" aria-label=\"ignore permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ignore</h3>\n<blockquote>\n<p>Ignore submission, optional values: always-always ignore clean-ignore when the value has not changed never-never ignore</p>\n</blockquote>\n<p>Default value: never, meaning that when the field is in the back-end interaction, the field is never ignored in the data submitted by the DataSet. For example: the field name name, we need to mention the modified name to the back end. If the current field is only used by the front end and does not need to be passed to the back end through the interface, then ignore can be configured as always.</p>\n<h3 id=\"field-object\" style=\"position:relative;\"><a href=\"#field-object\" aria-label=\"field object permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>field object</h3>\n<p>After the DataSet is instantiated, the common methods of the field object are as follows. Used to process the field configuration or function call after the instance.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Attribute name</th>\n<th align=\"left\">Description</th>\n<th align=\"left\">Type</th>\n<th align=\"left\">Default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">get(propsName)</td>\n<td align=\"left\">Get property value according to property name</td>\n<td align=\"left\">propsName- property name</td>\n<td align=\"left\">any</td>\n</tr>\n<tr>\n<td align=\"left\">set(propsName, value)</td>\n<td align=\"left\">set property value</td>\n<td align=\"left\">propsName-property name; value-property value</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">reset()</td>\n<td align=\"left\">Reset the set attributes</td>\n<td align=\"left\"></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">checkValidity()</td>\n<td align=\"left\">Check field value</td>\n<td align=\"left\"></td>\n<td align=\"left\">boolean</td>\n</tr>\n<tr>\n<td align=\"left\">getValue()</td>\n<td align=\"left\">Get the field value of the current record</td>\n<td align=\"left\"></td>\n<td align=\"left\">any</td>\n</tr>\n<tr>\n<td align=\"left\">isValid()</td>\n<td align=\"left\">Whether the verification passed</td>\n<td align=\"left\"></td>\n<td align=\"left\">boolean</td>\n</tr>\n<tr>\n<td align=\"left\">getValidationMessage()</td>\n<td align=\"left\">Get validation information</td>\n<td align=\"left\"></td>\n<td align=\"left\">string</td>\n</tr>\n</tbody>\n</table>\n<p>Note: The field object can be obtained in two ways:</p>\n<ol>\n<li>ds.getField(fieldName)</li>\n<li>record.getField(fieldName)</li>\n</ol>\n<p>The difference between them is that the field object obtained by ds is the basis of the field object obtained in the record, and the field object obtained by the record is used to meet the different configuration operation requirements for different fields between different data records.</p>\n<p>For example: There are two rows of data in the list, and there are fields name and age. The requirement is that when the input age is greater than 18, the name field value must be entered. At this time, the operation belongs to the update field object attribute of the current record object, which can be written as: record.getField('name').set('required', true). This will not affect the configuration of other record fields that are not entered and do not meet the requirements.</p>\n<h1 id=\"record-object\" style=\"position:relative;\"><a href=\"#record-object\" aria-label=\"record object permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>record object</h1>\n<blockquote>\n<p>DataSet 数据源中存储的记录，可以理解成数据库中的一条记录。在DataSet 实例化后初始化成 record 对象，具有值及方法。</p>\n</blockquote>\n<h2 id=\"record-values\" style=\"position:relative;\"><a href=\"#record-values\" aria-label=\"record values permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>record values</h2>\n<p>Instantiate ordinary data into record objects stored in the DataSet. Commonly used record object values ​​are as follows. For more information, please refer to record values.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Attribute name</th>\n<th align=\"left\">Description</th>\n<th align=\"left\">Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">id</td>\n<td align=\"left\">Unique ID, self-increasing number</td>\n<td align=\"left\">number</td>\n</tr>\n<tr>\n<td align=\"left\">key</td>\n<td align=\"left\">Unique key, the value of the primary key field or the unique index key field, the default is the same as id</td>\n<td align=\"left\">string | number</td>\n</tr>\n<tr>\n<td align=\"left\">status</td>\n<td align=\"left\">status, optional value add | update | delete | sync</td>\n<td align=\"left\">observable<string></td>\n</tr>\n<tr>\n<td align=\"left\">selectable</td>\n<td align=\"left\">optional</td>\n<td align=\"left\">observable<boolean></td>\n</tr>\n<tr>\n<td align=\"left\">isSelected</td>\n<td align=\"left\">Whether selected</td>\n<td align=\"left\">observable<boolean></td>\n</tr>\n<tr>\n<td align=\"left\">isCurrent</td>\n<td align=\"left\">is the current record</td>\n<td align=\"left\">observable<boolean></td>\n</tr>\n<tr>\n<td align=\"left\">dirty</td>\n<td align=\"left\">Whether the data has changed, including whether the cascaded data source has changed</td>\n<td align=\"left\">boolean</td>\n</tr>\n<tr>\n<td align=\"left\">index</td>\n<td align=\"left\">Index in the data source</td>\n<td align=\"left\">number</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"record-methods\" style=\"position:relative;\"><a href=\"#record-methods\" aria-label=\"record methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>record methods</h2>\n<p>The most frequent operation in daily development is data. After using the Pro component library, the corresponding data object record is operated.</p>\n<p>Each method of the record object is not used frequently. Here is a brief introduction to the setState and getState method groups.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Attribute</th>\n<th align=\"left\">Description</th>\n<th align=\"left\">Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">setState(key, value)</td>\n<td align=\"left\">Set a custom state value.</td>\n<td align=\"left\">key- key name or key-value pair object; value- value</td>\n</tr>\n<tr>\n<td align=\"left\">getState(key)</td>\n<td align=\"left\">Get a custom state value.</td>\n<td align=\"left\">key- key name<br></td>\n</tr>\n</tbody>\n</table>\n<p>This pair of methods is similar to the state management method that comes with native react. The difference is that it is mounted on the record object. What does it mean? We can mount a custom state value on a data object.</p>\n<p>For example: control editable table row editing. Using native state variable editing is troublesome when dealing with different editable states of multiple pieces of data. It is necessary to construct an object array corresponding to the row and its editing state. At this time, use the customization of the state value under the record object and directly call the current record.getState('editing') to distinguish the different editing states of different data, which is convenient and easy to use.</p>\n<h1 id=\"transport\" style=\"position:relative;\"><a href=\"#transport\" aria-label=\"transport permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transport</h1>\n<blockquote>\n<p>DataSet is the \"intermediate transmission station\" that interacts with the back-end interface.</p>\n</blockquote>\n<p>A set of default interface specifications is built into the DataSet. The name attribute configuration of the DataSet can correspond to the name of the backend (the agreed related key), and the agreed submitUrl, queryUrl, tlsUrl, validateUrl, etc. are automatically generated. If the front-end and back-end specifications are unified, there is no need to configure the \"intermediate station\" transport. If the interface is inconsistent, the front-end configuration interface is required.</p>\n<p>E.g:</p>\n<ol>\n<li>\n<p>The front-end and back-end specifications are unified, and the name attribute in the front-end DataSet configuration corresponds to the back-end. Then call ds.query(), the corresponding queryUrl called is: <code class=\"language-text\">/dataset/${this.name}/queries</code></p>\n<ol>\n<li>submitUrl:<code class=\"language-text\">/dataset/${this.name}/mutations</code></li>\n<li>validateUrl:<code class=\"language-text\">/dataset/${this.name}/validate</code></li>\n</ol>\n</li>\n</ol>\n<p>The url format generated by the convention is: <code class=\"language-text\">/dataset/${this.name}/xxx</code>, and the request type is POST</p>\n<ol start=\"2\">\n<li>There is a separate set of specifications on the backend, which can be used: adapterCRUD configuration adapter-(config: AxiosRequestConfig, type: string) => AxiosRequestConfig; support for global configuration.</li>\n</ol>\n<p>E.g:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">defaultAdapter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config<span class=\"token operator\">:</span> AxiosRequestConfig<span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Use switch case or strategy mode processing</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'read'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        url<span class=\"token operator\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span>\n        method<span class=\"token operator\">:</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'create'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          url<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">xxx</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n          method<span class=\"token operator\">:</span> <span class=\"token string\">'put'</span><span class=\"token punctuation\">,</span>\n          data<span class=\"token operator\">:</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'update'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// url: `xxx`,</span>\n          method<span class=\"token operator\">:</span> <span class=\"token string\">'put'</span><span class=\"token punctuation\">,</span>\n          data<span class=\"token operator\">:</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'destroy'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        url<span class=\"token operator\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token operator\">:</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        method<span class=\"token operator\">:</span> <span class=\"token string\">'delete'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li>The back-end specifications are different and the situation is changeable; the front-end needs special treatment: configure the transport or corresponding url attribute in the DataSet configuration. E.g:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Configure transport</span>\ntransport<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">create</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">xxx</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">update</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> params <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">xxx</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    method<span class=\"token operator\">:</span><span class=\"token string\">'put'</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>params<span class=\"token punctuation\">,</span> ss<span class=\"token operator\">:</span><span class=\"token string\">'xx'</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// Only configure queryUrl</span>\nqueryUrl<span class=\"token operator\">:</span><span class=\"token string\">'xxx'</span></code></pre></div>\n<p>Note: The default request type in the component library is POST, so when calling the DataSet method to set related query parameters, in the callback of the axiosConfig returned by the transport processing, the query parameter values ​​set by setQueryParameter(para, value) are all in the data object, method When the type is GET, you need to pay attention to the conversion and transmission of parameters.</p>\n<h1 id=\"datatojson\" style=\"position:relative;\"><a href=\"#datatojson\" aria-label=\"datatojson permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dataToJSON</h1>\n<p>dataToJSON is one of the attribute configuration of DataSet. Used to configure DataSet data conversion rules.</p>\n<p>It is applied when calling DataSet.toJSONData(), and the interaction with back-end data is the same after configuration.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Enumerated Value</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">dirty</td>\n<td align=\"left\">Only convert the changed data, including the data that has not changed but the cascade has changed</td>\n</tr>\n<tr>\n<td align=\"left\">selected</td>\n<td align=\"left\">Only convert the selected data, irrelevant to the change state of the data</td>\n</tr>\n<tr>\n<td align=\"left\">all</td>\n<td align=\"left\">Convert all data</td>\n</tr>\n<tr>\n<td align=\"left\">normal</td>\n<td align=\"left\">Convert all data to normal json, without additional fields such as __status, __id, and temporarily deleted data, generally used for large JSON fields</td>\n</tr>\n<tr>\n<td align=\"left\">dirty-self</td>\n<td align=\"left\">Same as dirty, but does not convert cascaded data</td>\n</tr>\n<tr>\n<td align=\"left\">selected-self</td>\n<td align=\"left\">Same as selected, but does not convert cascaded data</td>\n</tr>\n<tr>\n<td align=\"left\">all-self</td>\n<td align=\"left\">Same as all, but does not convert cascaded data</td>\n</tr>\n<tr>\n<td align=\"left\">normal-self</td>\n<td align=\"left\">Same as normal, but does not convert cascaded data</td>\n</tr>\n</tbody>\n</table>\n<p>This chapter selects a few key attributes and methods to describe the scene, let's put it into practice and do some function extensions to the Table in the previous chapter.</p>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The previous chapters introduced the concept of DS objects. This chapter will introduce the following properties and explain in detail its extended objects:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"field"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"record"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"transport"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"dataToJSON"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"dataset-methods","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#dataset-methods","ariaLabel":"dataset methods permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"DataSet methods"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The instantiated object of the DataSet has many methods-DataSet Methods, which are used to manipulate the associated objects in the DataSet and implement various operations such as requests, loading, and data conversion."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"DataSet method operation objects can be divided into three categories:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The DataSet itself"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Interact with the backend-query, submit, setQueryParameter, loadData, page..."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Status, data acquisition-ready, toData, toJSONData..."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Data positioning-locate, page, first, prePage..."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Field Object"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"getField(fieldName)-Get field object"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"addField(fieldName, fieldProps)-update, add field"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The records array"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Addition and deletion of record array-create, delete, remove, select..."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Iterative method of record array-push, shift, map, forEach..."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The corresponding associated object also has its own method attributes and so on."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"fields","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#fields","ariaLabel":"fields permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"fields"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Official website document description: Field property array, see "},{"type":"element","tagName":"a","properties":{"href":"/c7n-ui/zh/procmp/dataset/dataset#field-props"},"children":[{"type":"text","value":"Field Props"}]},{"type":"text","value":" for details."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Field attribute value, corresponding configuration to generate field object and field object method after DS is instantiated."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, in the official website API documentation, the field object has its own properties (props), values ​​(values), and methods (method). So how can these three types of API be used when? And what is the effect?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"field-props","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#field-props","ariaLabel":"field props permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"field props"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Configure the field information attribute in the DataSet configuration."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: Some field attributes have higher priority than component attributes.\nFor example, the required attribute, the field configuration must be entered, and the component configuration required={false}. At this time, if there is a conflict, the configuration on the field will be applied.\nThe reason is that DS can associate multiple components and perform operations such as submitting and interacting with the backend. The control range is wide and the status interacts with the backend. Therefore, DS has a higher priority when attributes conflict.\nThe following are some of the most commonly used attributes in development (detailed descriptions will be made about the Lov/Lookup class):"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Attribute name"}]},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Description"}]},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Type"}]},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Default value"}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Field name"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"type"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Field type, optional value: boolean | number | string | date | dateTime | time | week | month | year | email | url | intl | object"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"string"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"required"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Is it required"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"boolean"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"false"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"computedProps"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Dynamic property object. The object is the key-value pair of the field attribute and the hook that returns the field value."}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"{ fieldProp: ({ dataSet, record, name }) => value }"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"ignore"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Ignore submission, optional value: always- always ignore clean- ignore when the value has not changed never- never ignore"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"never"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"name","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#name","ariaLabel":"name permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"name"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Corresponding to the back-end field name to be processed"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"type","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#type","ariaLabel":"type permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"type"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Field value type. Used to process value types and render corresponding component types in the component library according to type associations."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, in the previous chapter Table active status field, type:'boolean', the rendering component type in the table is Checkbox."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Other corresponding relationships are as follows:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"number-NumberField"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"string-TextField | Select"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"date-DatePicker"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"dateTime-DateTimePicker"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"time-TimePicker"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"week-WeekPicker"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"month-MonthPicker"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"year-YearPicker"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"email-EmailField"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"url-UrlField"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"intl-IntlField"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"object-Select | Lov"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It can be found that there are multiple situations for the above type corresponding to the component type, and more types of component support may be required in actual applications, so how to deal with this situation in the component library? Is it supported?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The answer is yes of course. How to support the subsequent chapters combined with case practice."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"required","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#required","ariaLabel":"required permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"required"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Whether you must lose."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Whether the configuration field must be entered, if it is true (must be entered), then when using DS to submit or call the relevant verification method, it will verify whether the value exists."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are also attributes of the same type: readOnly | disabled ..."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Corresponding to more custom verification requirements, you can use the attribute validator-validator. When the return value is false or a string containing error information, the verification fails."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"dynamicprops","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#dynamicprops","ariaLabel":"dynamicprops permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"dynamicProps"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic attribute objects. The object is the key-value pair of the field attribute and the hook that returns the field value."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Surface meaning, dynamic configuration properties, type: {fieldProp: ({ dataSet, record, name }) => value}"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, the above mandatory attribute dynamic configuration:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"plain"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-plain"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-plain"]},"children":[{"type":"text","value":"// When the field meets the xxx condition, the field must be entered\ndynamicProps: { \n  required: ({ dataSet, record, name }) => {\n    if(xxx) {\n      return true;\n    }\n  },\n}"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: Try to use dynamicProps only when necessary. Dynamic properties need to be logically judged in the component library to ensure that the properties are dynamically processed correctly. Meaningless dynamic properties will cause performance problems."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"ignore","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#ignore","ariaLabel":"ignore permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"ignore"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ignore submission, optional values: always-always ignore clean-ignore when the value has not changed never-never ignore"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Default value: never, meaning that when the field is in the back-end interaction, the field is never ignored in the data submitted by the DataSet. For example: the field name name, we need to mention the modified name to the back end. If the current field is only used by the front end and does not need to be passed to the back end through the interface, then ignore can be configured as always."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"field-object","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#field-object","ariaLabel":"field object permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"field object"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After the DataSet is instantiated, the common methods of the field object are as follows. Used to process the field configuration or function call after the instance."}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Attribute name"}]},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Description"}]},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Type"}]},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Default value"}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"get(propsName)"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Get property value according to property name"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"propsName- property name"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"any"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"set(propsName, value)"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"set property value"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"propsName-property name; value-property value"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"reset()"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Reset the set attributes"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"checkValidity()"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Check field value"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"boolean"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"getValue()"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Get the field value of the current record"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"any"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"isValid()"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Whether the verification passed"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"boolean"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"getValidationMessage()"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Get validation information"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"string"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: The field object can be obtained in two ways:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"ds.getField(fieldName)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"record.getField(fieldName)"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The difference between them is that the field object obtained by ds is the basis of the field object obtained in the record, and the field object obtained by the record is used to meet the different configuration operation requirements for different fields between different data records."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example: There are two rows of data in the list, and there are fields name and age. The requirement is that when the input age is greater than 18, the name field value must be entered. At this time, the operation belongs to the update field object attribute of the current record object, which can be written as: record.getField('name').set('required', true). This will not affect the configuration of other record fields that are not entered and do not meet the requirements."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"record-object","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#record-object","ariaLabel":"record object permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"record object"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"DataSet 数据源中存储的记录，可以理解成数据库中的一条记录。在DataSet 实例化后初始化成 record 对象，具有值及方法。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"record-values","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#record-values","ariaLabel":"record values permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"record values"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instantiate ordinary data into record objects stored in the DataSet. Commonly used record object values ​​are as follows. For more information, please refer to record values."}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Attribute name"}]},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Description"}]},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Type"}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"id"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Unique ID, self-increasing number"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"number"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"key"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Unique key, the value of the primary key field or the unique index key field, the default is the same as id"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"string | number"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"status"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"status, optional value add | update | delete | sync"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"observable"},{"type":"element","tagName":"string","properties":{},"children":[]}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"selectable"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"optional"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"observable"},{"type":"element","tagName":"boolean","properties":{},"children":[]}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"isSelected"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Whether selected"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"observable"},{"type":"element","tagName":"boolean","properties":{},"children":[]}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"isCurrent"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"is the current record"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"observable"},{"type":"element","tagName":"boolean","properties":{},"children":[]}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"dirty"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Whether the data has changed, including whether the cascaded data source has changed"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"boolean"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"index"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Index in the data source"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"number"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"record-methods","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#record-methods","ariaLabel":"record methods permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"record methods"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The most frequent operation in daily development is data. After using the Pro component library, the corresponding data object record is operated."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Each method of the record object is not used frequently. Here is a brief introduction to the setState and getState method groups."}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Attribute"}]},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Description"}]},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Type"}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"setState(key, value)"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Set a custom state value."}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"key- key name or key-value pair object; value- value"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"getState(key)"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Get a custom state value."}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"key- key name"},{"type":"element","tagName":"br","properties":{},"children":[]}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This pair of methods is similar to the state management method that comes with native react. The difference is that it is mounted on the record object. What does it mean? We can mount a custom state value on a data object."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example: control editable table row editing. Using native state variable editing is troublesome when dealing with different editable states of multiple pieces of data. It is necessary to construct an object array corresponding to the row and its editing state. At this time, use the customization of the state value under the record object and directly call the current record.getState('editing') to distinguish the different editing states of different data, which is convenient and easy to use."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"transport","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#transport","ariaLabel":"transport permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Transport"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"DataSet is the \"intermediate transmission station\" that interacts with the back-end interface."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A set of default interface specifications is built into the DataSet. The name attribute configuration of the DataSet can correspond to the name of the backend (the agreed related key), and the agreed submitUrl, queryUrl, tlsUrl, validateUrl, etc. are automatically generated. If the front-end and back-end specifications are unified, there is no need to configure the \"intermediate station\" transport. If the interface is inconsistent, the front-end configuration interface is required."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"E.g:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The front-end and back-end specifications are unified, and the name attribute in the front-end DataSet configuration corresponds to the back-end. Then call ds.query(), the corresponding queryUrl called is: "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/dataset/${this.name}/queries"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"submitUrl:"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/dataset/${this.name}/mutations"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"validateUrl:"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/dataset/${this.name}/validate"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The url format generated by the convention is: "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/dataset/${this.name}/xxx"}]},{"type":"text","value":", and the request type is POST"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{"start":2},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"There is a separate set of specifications on the backend, which can be used: adapterCRUD configuration adapter-(config: AxiosRequestConfig, type: string) => AxiosRequestConfig; support for global configuration."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"E.g:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"js"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function-variable","function"]},"children":[{"type":"text","value":"defaultAdapter"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"config"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" AxiosRequestConfig"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" type"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" string"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// Use switch case or strategy mode processing"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"switch"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"type"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"case"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'read'"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n        url"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'xxx'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n        method"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'get'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"case"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'create'"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n          url"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","template-string"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"xxx"}]},{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n          method"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'put'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n          data"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" data"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"case"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'update'"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n          "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// url: `xxx`,"}]},{"type":"text","value":"\n          method"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'put'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n          data"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" data"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"case"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'destroy'"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n        url"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'xxx'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n        data"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" data"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n        method"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'delete'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{"start":3},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The back-end specifications are different and the situation is changeable; the front-end needs special treatment: configure the transport or corresponding url attribute in the DataSet configuration. E.g:"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"js"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// Configure transport"}]},{"type":"text","value":"\ntransport"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function-variable","function"]},"children":[{"type":"text","value":"create"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" data "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    url"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","template-string"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"xxx"}]},{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    data"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" data"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function-variable","function"]},"children":[{"type":"text","value":"update"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" data"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" params "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    url"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","template-string"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"xxx"}]},{"type":"element","tagName":"span","properties":{"className":["token","template-punctuation","string"]},"children":[{"type":"text","value":"`"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    method"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'put'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    data"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" data"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    params"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"..."}]},{"type":"text","value":"params"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" ss"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'xx'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// Only configure queryUrl"}]},{"type":"text","value":"\nqueryUrl"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'xxx'"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: The default request type in the component library is POST, so when calling the DataSet method to set related query parameters, in the callback of the axiosConfig returned by the transport processing, the query parameter values ​​set by setQueryParameter(para, value) are all in the data object, method When the type is GET, you need to pay attention to the conversion and transmission of parameters."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"datatojson","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#datatojson","ariaLabel":"datatojson permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"dataToJSON"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"dataToJSON is one of the attribute configuration of DataSet. Used to configure DataSet data conversion rules."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is applied when calling DataSet.toJSONData(), and the interaction with back-end data is the same after configuration."}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Enumerated Value"}]},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"dirty"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Only convert the changed data, including the data that has not changed but the cascade has changed"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"selected"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Only convert the selected data, irrelevant to the change state of the data"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"all"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Convert all data"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"normal"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Convert all data to normal json, without additional fields such as __status, __id, and temporarily deleted data, generally used for large JSON fields"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"dirty-self"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Same as dirty, but does not convert cascaded data"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"selected-self"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Same as selected, but does not convert cascaded data"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"all-self"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Same as all, but does not convert cascaded data"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"normal-self"}]},{"type":"element","tagName":"td","properties":{"align":"left"},"children":[{"type":"text","value":"Same as normal, but does not convert cascaded data"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This chapter selects a few key attributes and methods to describe the scene, let's put it into practice and do some function extensions to the Table in the previous chapter."}]}],"data":{"quirksMode":false}},"tableOfContents":"<ul>\n<li><a href=\"/c7n-ui/en/tutorials/dataSet-more/#dataset-methods\">DataSet methods</a></li>\n<li>\n<p><a href=\"/c7n-ui/en/tutorials/dataSet-more/#fields\">fields</a></p>\n<ul>\n<li>\n<p><a href=\"/c7n-ui/en/tutorials/dataSet-more/#field-props\">field props</a></p>\n<ul>\n<li><a href=\"/c7n-ui/en/tutorials/dataSet-more/#name\">name</a></li>\n<li><a href=\"/c7n-ui/en/tutorials/dataSet-more/#type\">type</a></li>\n<li><a href=\"/c7n-ui/en/tutorials/dataSet-more/#required\">required</a></li>\n<li><a href=\"/c7n-ui/en/tutorials/dataSet-more/#dynamicprops\">dynamicProps</a></li>\n<li><a href=\"/c7n-ui/en/tutorials/dataSet-more/#ignore\">ignore</a></li>\n<li><a href=\"/c7n-ui/en/tutorials/dataSet-more/#field-object\">field object</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/c7n-ui/en/tutorials/dataSet-more/#record-object\">record object</a></p>\n<ul>\n<li><a href=\"/c7n-ui/en/tutorials/dataSet-more/#record-values\">record values</a></li>\n<li><a href=\"/c7n-ui/en/tutorials/dataSet-more/#record-methods\">record methods</a></li>\n</ul>\n</li>\n<li><a href=\"/c7n-ui/en/tutorials/dataSet-more/#transport\">Transport</a></li>\n<li><a href=\"/c7n-ui/en/tutorials/dataSet-more/#datatojson\">dataToJSON</a></li>\n</ul>","fields":{"slug":"/en/tutorials/dataSet-more","readingTime":{"text":"10 min read","time":570900.0000000001}},"frontmatter":{"title":"Detailed DataSet Object"},"parent":{"__typename":"File","relativePath":"dataSet-more.en.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/tutorials/introduction"},"frontmatter":{"title":"Choerodon UI getting started guide","order":0}}},{"node":{"fields":{"slug":"/zh/tutorials/introduction"},"frontmatter":{"title":"Choerodon UI 入门指南","order":0}}},{"node":{"fields":{"slug":"/zh/tutorials/demo-build"},"frontmatter":{"title":"Demo 界面搭建","order":1}}},{"node":{"fields":{"slug":"/en/tutorials/demo-build"},"frontmatter":{"title":"Demo interface construction","order":1}}},{"node":{"fields":{"slug":"/en/tutorials/dataSet-guide"},"frontmatter":{"title":"What is DataSet","order":2}}},{"node":{"fields":{"slug":"/zh/tutorials/dataSet-guide"},"frontmatter":{"title":"DataSet 是什么","order":2}}},{"node":{"fields":{"slug":"/zh/tutorials/basic"},"frontmatter":{"title":"DataSet 入门","order":3}}},{"node":{"fields":{"slug":"/en/tutorials/basic"},"frontmatter":{"title":"Getting started with DS","order":3}}},{"node":{"fields":{"slug":"/zh/tutorials/table"},"frontmatter":{"title":"开发体验 —— 最简 Table 实现","order":4}}},{"node":{"fields":{"slug":"/en/tutorials/table"},"frontmatter":{"title":"Development Experience-Simplest Table Implementation","order":4}}},{"node":{"fields":{"slug":"/en/tutorials/dataSet-more"},"frontmatter":{"title":"Detailed DataSet Object","order":5}}},{"node":{"fields":{"slug":"/zh/tutorials/dataSet-more"},"frontmatter":{"title":"DataSet 对象详解","order":5}}},{"node":{"fields":{"slug":"/en/tutorials/table-advance"},"frontmatter":{"title":"Table Advanced","order":6}}},{"node":{"fields":{"slug":"/zh/tutorials/table-advance"},"frontmatter":{"title":"Table 进阶","order":6}}},{"node":{"fields":{"slug":"/zh/tutorials/form"},"frontmatter":{"title":"Form","order":7}}},{"node":{"fields":{"slug":"/en/tutorials/form"},"frontmatter":{"title":"Form","order":7}}},{"node":{"fields":{"slug":"/en/tutorials/tree"},"frontmatter":{"title":"Tree","order":8}}},{"node":{"fields":{"slug":"/zh/tutorials/tree"},"frontmatter":{"title":"Tree","order":8}}},{"node":{"fields":{"slug":"/en/tutorials/select"},"frontmatter":{"title":"Select","order":9}}},{"node":{"fields":{"slug":"/zh/tutorials/select"},"frontmatter":{"title":"Select","order":9}}},{"node":{"fields":{"slug":"/zh/tutorials/lov"},"frontmatter":{"title":"Lov","order":10}}},{"node":{"fields":{"slug":"/en/tutorials/lov"},"frontmatter":{"title":"Lov","order":10}}},{"node":{"fields":{"slug":"/en/tutorials/codearea-theme"},"frontmatter":{"title":"CodeArea 主题资源引用","order":11}}},{"node":{"fields":{"slug":"/zh/tutorials/configure"},"frontmatter":{"title":"全局配置","order":11}}},{"node":{"fields":{"slug":"/zh/tutorials/codearea-theme"},"frontmatter":{"title":"CodeArea 主题资源引用","order":11}}},{"node":{"fields":{"slug":"/en/tutorials/configure"},"frontmatter":{"title":"全局配置","order":11}}},{"node":{"fields":{"slug":"/en/tutorials/namesake-property"},"frontmatter":{"title":"同名属性","order":13}}},{"node":{"fields":{"slug":"/zh/tutorials/namesake-property"},"frontmatter":{"title":"同名属性","order":13}}}]}},"pageContext":{}},"staticQueryHashes":["3000541721","3000541721","653731124"]}